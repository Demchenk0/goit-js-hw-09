{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBACtBD,SAASC,cAAc,UAE5CF,EAAKM,iBAAiB,UAItB,SAAsBC,GACpBA,EAAMC,iBAQoC,IAP1C,IAAMC,EAAaC,OAAOP,EAAWQ,OAC/BC,EAAiBF,OAAON,EAAUO,OAClCE,EAAcH,OAAOL,EAAYM,OAK9BG,EAAQ,EAAGC,EAAiBN,EAAYK,GAASD,EAAaC,GAAS,EAAGC,GAAkBH,EAEnGI,EAAcF,EAAOC,GAChBE,MAAK,SAAAC,GACJpB,EAAAqB,OAAOC,QAAQF,MAEhBG,OAAM,SAAAC,GACLxB,EAAAqB,OAAOI,QAAQD,SAOlB,SAAEN,EAAcQ,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACNF,EAAS,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEnDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEjDA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst buttonSubmit = document.querySelector('button');\n\nform.addEventListener('submit', onFormSubmit);\n\nlet counterMiliSek = null;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(inputDelay.value);\n  const firstDelayStep = Number(inputStep.value);\n  const firstAmount = Number(inputAmount.value);\n\n\n// Наш цыкл перебирающий и добавляет нашие значения\n  \n  for (let index = 1, counterMiliSek = firstDelay; index <= firstAmount; index += 1, counterMiliSek += firstDelayStep) {\n\n    createPromise(index, counterMiliSek)\n        .then(thenResolve => {\n          Notify.success(thenResolve);\n        })\n        .catch(catchRegect => {\n          Notify.failure(catchRegect);\n        });\n  }\n  \n}\n\n// Промисы\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve (`✅ Fulfilled promise ${position} in ${delay}ms`)\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n    }, delay)\n\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","preventDefault","firstDelay","Number","value","firstDelayStep","firstAmount","index","counterMiliSek1","$ce04d3a99e08e73b$var$createPromise","then","thenResolve","Notify","success","catch","catchRegect","failure","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat"],"version":3,"file":"03-promises.8b3cd197.js.map"}